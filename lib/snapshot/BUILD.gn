# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//flutter/lib/snapshot/toolchain.gni")
import("//flutter/lib/ui/dart_ui.gni")

target_is_fuchsia = target_os == "fuchsia"

if (target_is_fuchsia) {
  import("//apps/mozart/lib/flutter/sdk_ext/sdk_ext.gni")
  import("//lib/fidl/dart/sdk_ext/sdk_ext.gni")
}

bindings_output_dir = "$root_gen_dir/sky/bindings"

copy("generate_dart_ui") {
  sources = dart_ui_files

  outputs = [
    "$bindings_output_dir/dart_ui/{{source_file_part}}",
  ]
}

action("generate_snapshot_bin") {
  if (target_is_fuchsia) {
    snapshot_dart = "snapshot_fuchsia.dart"
  } else {
    snapshot_dart = "snapshot.dart"
  }

  deps = [
    ":generate_dart_ui",
    "//dart/runtime/bin:gen_snapshot($dart_host_toolchain)",
  ]
  inputs = [
             "//dart/runtime/tools/create_snapshot_bin.py",
             snapshot_dart,
           ] + dart_ui_files

  vm_isolate_snapshot = "$target_gen_dir/vm_isolate_snapshot.bin"
  isolate_snapshot = "$target_gen_dir/isolate_snapshot.bin"
  outputs = [
    vm_isolate_snapshot,
    isolate_snapshot,
  ]

  rebased_dart_ui_path = rebase_path(dart_ui_path)

  gen_snapshot_dir =
      get_label_info("//dart/runtime/bin:gen_snapshot($dart_host_toolchain)",
                     "root_out_dir")
  script = "//dart/runtime/tools/create_snapshot_bin.py"

  args = [
    "--executable",
    rebase_path("$gen_snapshot_dir/gen_snapshot"),
    "--package_root",
    rebase_path("$root_gen_dir"),
    "--script",
    rebase_path(snapshot_dart),
    "--snapshot_kind",
    "core",
    "--vm_output_bin",
    rebase_path(vm_isolate_snapshot, root_build_dir),
    "--isolate_output_bin",
    rebase_path(isolate_snapshot, root_build_dir),
    "--url_mapping=dart:ui,$rebased_dart_ui_path",
  ]

  if (target_is_fuchsia) {
    inputs += fidl_dart_sdk_ext_files + mozart_dart_sdk_ext_files
    fidl_internal_path = rebase_path(fidl_dart_sdk_ext_lib)
    mozart_internal_path = rebase_path(mozart_dart_sdk_ext_lib)
    args += [
      "--url_mapping=dart:fidl.internal,$fidl_internal_path",
      "--url_mapping=dart:mozart.internal,$mozart_internal_path",
    ]
  }
}

action("generate_snapshot_file") {
  deps = [
    ":generate_snapshot_bin",
  ]
  inputs = [
    "//dart/runtime/tools/create_snapshot_file.py",
    "snapshot.c.tmpl",
    "$target_gen_dir/vm_isolate_snapshot.bin",
    "$target_gen_dir/isolate_snapshot.bin",
  ]
  output = "$target_gen_dir/snapshot.c"
  outputs = [
    output,
  ]

  script = "//dart/runtime/tools/create_snapshot_file.py"
  args = [
    "--vm_input_bin",
    rebase_path("$target_gen_dir/vm_isolate_snapshot.bin"),
    "--input_bin",
    rebase_path("$target_gen_dir/isolate_snapshot.bin"),
    "--input_cc",
    rebase_path("snapshot.c.tmpl"),
    "--output",
    rebase_path(output),
  ]
}

source_set("snapshot") {
  sources = [
    "$target_gen_dir/snapshot.c",
  ]

  deps = [
    ":generate_snapshot_file",
  ]
}
